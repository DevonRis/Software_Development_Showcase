// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkillsShowcase.Api.Models.Data;

#nullable disable

namespace SkillsShowcase.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240816004111_SeedDataGuitars")]
    partial class SeedDataGuitars
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SkillsShowcase.Shared.Domain.Models.DcVillains", b =>
                {
                    b.Property<int>("DcVillanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DcVillanId"));

                    b.Property<string>("CityLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlacedInArkham")
                        .HasColumnType("int");

                    b.Property<int?>("SupermanLevelVillan")
                        .HasColumnType("int");

                    b.Property<int?>("ThreatLevel")
                        .HasColumnType("int");

                    b.Property<int?>("VillanAge")
                        .HasColumnType("int");

                    b.Property<string>("VillanName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VillanPower")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weaknesses")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DcVillanId");

                    b.ToTable("DcVillains");

                    b.HasData(
                        new
                        {
                            DcVillanId = 1,
                            CityLocation = "Gotham",
                            PlacedInArkham = 0,
                            ThreatLevel = 3,
                            VillanAge = 43,
                            VillanName = "Joker",
                            VillanPower = "None/Cunning",
                            Weaknesses = "None"
                        },
                        new
                        {
                            DcVillanId = 2,
                            CityLocation = "Apokolips",
                            PlacedInArkham = 2,
                            ThreatLevel = 4,
                            VillanAge = 1000,
                            VillanName = "Darkseid",
                            VillanPower = "SuperStrength/CosmicPowers",
                            Weaknesses = "None/Superman"
                        },
                        new
                        {
                            DcVillanId = 3,
                            CityLocation = "Metropolis",
                            PlacedInArkham = 0,
                            ThreatLevel = 2,
                            VillanAge = 44,
                            VillanName = "Lex Luthor",
                            VillanPower = "Genius Intellect",
                            Weaknesses = "None/Regular Human/Superman"
                        },
                        new
                        {
                            DcVillanId = 4,
                            CityLocation = "Gothom",
                            PlacedInArkham = 0,
                            ThreatLevel = 5,
                            VillanAge = 58,
                            VillanName = "DeathStroke",
                            VillanPower = "Enhanced Human",
                            Weaknesses = "None"
                        },
                        new
                        {
                            DcVillanId = 5,
                            CityLocation = "Gothom",
                            PlacedInArkham = 1,
                            ThreatLevel = 5,
                            VillanAge = 49,
                            VillanName = "Two-Face",
                            VillanPower = "None",
                            Weaknesses = "None"
                        },
                        new
                        {
                            DcVillanId = 6,
                            CityLocation = "Unknown",
                            PlacedInArkham = 2,
                            ThreatLevel = 4,
                            VillanAge = 1000,
                            VillanName = "Braniac",
                            VillanPower = "Genius Intellect/Cosmic Powers",
                            Weaknesses = "None/Superman"
                        },
                        new
                        {
                            DcVillanId = 7,
                            CityLocation = "Gothom",
                            PlacedInArkham = 0,
                            ThreatLevel = 5,
                            VillanAge = 37,
                            VillanName = "Riddler",
                            VillanPower = "None",
                            Weaknesses = "None"
                        },
                        new
                        {
                            DcVillanId = 8,
                            CityLocation = "Space",
                            PlacedInArkham = 0,
                            ThreatLevel = 2,
                            VillanAge = 59,
                            VillanName = "Sinestro",
                            VillanPower = "Yellow Lantern Ring",
                            Weaknesses = "Removal of Ring"
                        },
                        new
                        {
                            DcVillanId = 9,
                            CityLocation = "Unknown",
                            PlacedInArkham = 2,
                            ThreatLevel = 4,
                            VillanAge = 1000,
                            VillanName = "Doomsday",
                            VillanPower = "SuperStrength/Invulnerable",
                            Weaknesses = "None/Superman"
                        },
                        new
                        {
                            DcVillanId = 10,
                            CityLocation = "Star City",
                            PlacedInArkham = 0,
                            ThreatLevel = 4,
                            VillanAge = 40,
                            VillanName = "Professor Zoom",
                            VillanPower = "Reverse Speed Force",
                            Weaknesses = "None/Superman"
                        });
                });

            modelBuilder.Entity("SkillsShowcase.Shared.Domain.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaritalStatus")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Email = "Devonpaniccia@gmail.com",
                            FirstName = "Devon",
                            Gender = 0,
                            LastName = "Rismay",
                            MaritalStatus = 0,
                            PhoneNumber = "8322156677"
                        });
                });

            modelBuilder.Entity("SkillsShowcase.Shared.Domain.Models.EmployeeSecretKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecretKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmployeeSecretKeys");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeName = "Devon Rismay",
                            SecretKey = "Auth-234252-rgsdfg4553-234dsdf-5555"
                        },
                        new
                        {
                            Id = 2,
                            EmployeeName = "John Hull",
                            SecretKey = "Auth-234252-rgsdfg4553-234dsdf-5554"
                        },
                        new
                        {
                            Id = 3,
                            EmployeeName = "Quinshae Hopkins",
                            SecretKey = "Auth-234252-rgsdfg4553-234dsdf-5553"
                        },
                        new
                        {
                            Id = 4,
                            EmployeeName = "Robert Pyron",
                            SecretKey = "Auth-234252-rgsdfg4553-234dsdf-5552"
                        });
                });

            modelBuilder.Entity("SkillsShowcase.Shared.Domain.Models.Guitars", b =>
                {
                    b.Property<int>("GuitarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GuitarId"));

                    b.Property<DateTime?>("BuildYear")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuitarManufacturer")
                        .HasColumnType("int");

                    b.Property<string>("GuitarModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("GuitarPrice")
                        .HasColumnType("float");

                    b.HasKey("GuitarId");

                    b.ToTable("Guitars");

                    b.HasData(
                        new
                        {
                            GuitarId = 1,
                            BuildYear = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuitarManufacturer = 1,
                            GuitarModel = "Custom Shop American Stratocaster",
                            GuitarPrice = 5000.2299999999996
                        },
                        new
                        {
                            GuitarId = 2,
                            BuildYear = new DateTime(2023, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuitarManufacturer = 1,
                            GuitarModel = "Custom Shop American Telecaster",
                            GuitarPrice = 4000.4499999999998
                        },
                        new
                        {
                            GuitarId = 3,
                            BuildYear = new DateTime(2022, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuitarManufacturer = 1,
                            GuitarModel = "Special Edition Telecaster FMT HH",
                            GuitarPrice = 1000.55
                        },
                        new
                        {
                            GuitarId = 4,
                            BuildYear = new DateTime(2024, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuitarManufacturer = 1,
                            GuitarModel = "Acoustasonic Telecaster",
                            GuitarPrice = 1998.6300000000001
                        },
                        new
                        {
                            GuitarId = 5,
                            BuildYear = new DateTime(2024, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuitarManufacturer = 2,
                            GuitarModel = "ES-339 Figured Semi-hollowbody",
                            GuitarPrice = 3500.8899999999999
                        },
                        new
                        {
                            GuitarId = 6,
                            BuildYear = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuitarManufacturer = 2,
                            GuitarModel = "SG Standard 61 Maestro Vibrola",
                            GuitarPrice = 2300.23
                        },
                        new
                        {
                            GuitarId = 7,
                            BuildYear = new DateTime(2020, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuitarManufacturer = 3,
                            GuitarModel = "Silver Sky",
                            GuitarPrice = 2749.23
                        },
                        new
                        {
                            GuitarId = 8,
                            BuildYear = new DateTime(2000, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuitarManufacturer = 4,
                            GuitarModel = "Artstar AS2000",
                            GuitarPrice = 2600.23
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
